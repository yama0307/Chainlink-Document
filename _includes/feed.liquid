---
layout: ./nodes.liquid
section: ethereum
---

{% case metadata.ecosystem %}
  {% when "terra" %}
     <p>To learn how to implement these feeds, see the <a href="/docs/terra/using-data-feeds-terra/">Terra Examples for Consuming Data Feeds</a>.</p>
     <p>To obtain tokens on the Terra Bombay Testnet, see the <a href="https://faucet.terra.money/">Terra Testnet Faucet</a>. For these feeds, use the <strong>Bombay-12</strong> testnet.</p>
  {% when "solana" %}
     <p>To learn how to implement these feeds, see the <a href="/docs/solana/using-data-feeds-solana/">Solana Examples for Consuming Data Feeds</a>.</p>
     <p>To learn how to obtain SOL tokens on the Solana Devnet, see the <a href="https://docs.solana.com/cli/transfer-tokens#airdrop-some-tokens-to-get-started">Solana Documentation</a>.</p>
  {% else %}
     <p>To learn how to implement these feeds, see the <a href="/docs/get-the-latest-price/">Ethereum Examples for Consuming Data Feeds</a>.</p>
     <p>For LINK token and Faucet details, see the <a href="/docs/link-token-contracts/">LINK Token Contracts</a> page.</p>
{% endcase %}

<p>Notes:</p>
<ul>
<li>Off-chain equity and ETF assets are traded only during standard market hours from 9:30AM to 4:00PM EDT Monday through Friday.</li>
<li>Assets on the Forex (Foreign Exchange) markets are traded only from 5PM EDT on Sunday through 4PM EDT on Friday.</li>
</ul>
<p>Using these feeds outside of those windows is not recommended.</p>

<style>
    table {
        border-collapse: collapse;
        width:100%;
    }
    th, td {
        border: 1px solid #dfe2e5;
        padding: 6px;
    }
    thead tr {
        background-color: #f6f8fa;
    }
    tr:nth-child(2n) {
        background-color: rgb(251, 252, 253);
    }
    .detail-hidden {
        display: none;
    }
    input {
        margin-right:8px;
    }

    .hovertext {
    position: relative;
    }

    .hovertext:before {
      content: attr(data-hover);
      visibility: hidden;
      opacity: 0;
      background-color: white;
      color: #375bd2;
      text-align: center;
      padding: 4px;
      outline: 1px solid #375bd2;
      font-color: #375bd2;
      border-radius: 2px;
      position: absolute;
      z-index: 1;
      bottom: 120%;
    }

    .hovertext:hover:before {
      opacity: 1;
      visibility: visible;
    }

    .proxy-pair-column {
      display: inline-flex;
    }

    .feed-category {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-right: 2px;
    }

    .proxy-pair {
      min-width: 107px;
    }

</style>

{% case metadata.l2healthflag %}
  {% when "arbitrum" %}
     <rdme-callout theme="warn">
         <p>It`s recommended to use <a href="/docs/l2-sequencer-flag/">L2 Sequencer Health Flag</a>
         for all of the contracts on Arbitrum network!
         </p>
     </rdme-callout>
  {% when "optimism" %}
     <rdme-callout theme="warn">
         <p>Optimism uses an optimistic rollup protocol, but there is no L2 Sequencer Health Flag available at this time.</p>
     </rdme-callout>
{% endcase %}

{% if metadata.ecosystem != "terra" and metadata.ecosystem != "solana" %}
  <div id="categories">
      <p>Data feeds reside in the following categories:</p>
      <ul>
        <li>ðŸŸ¢ <a href="/docs/selecting-data-feeds/#ðŸŸ¢-verified-feeds"><strong>Verified Feeds</strong></a>: Feeds that follow a standardized data feeds workflow</li>
        <li>ðŸŸ¡ <a href="/docs/selecting-data-feeds/#ðŸŸ¡-monitored-feeds"><strong>Monitored Feeds</strong></a>: Feeds under review by the Chainlink Labs team to support the stability of the broader ecosystem</li>
        <li>ðŸ”µ <a href="/docs/selecting-data-feeds/#-custom-feeds"><strong>Custom Feeds</strong></a>: Feeds built to serve a specific use case and might not be suitable for general use</li>
        <li>âš« <a href="/docs/selecting-data-feeds/#-specialized-feeds"><strong>Specialized Feeds</strong></a>: Feeds that inherently have more significant risk factors associated with them</li>
      </ul>
      <p>See the <a href="/docs/selecting-data-feeds/">Selecting Quality Data Feeds</a> page for complete details about each category.</p>
  </div>
{% endif %}

<div id="feed-data">
    Loading feeds...
</div>

<script>
    dest = document.getElementById('feed-data');
    let showExtraDetails = false;
    let feedCategories = {
        "verified": '<span class="hovertext feed-category" data-hover="Verified"><a href="/docs/selecting-data-feeds/#ðŸŸ¢-verified-feeds" alt="Verified" target="_blank">ðŸŸ¢</a></span>',
        "monitored": '<span class="hovertext feed-category" data-hover="Monitored"><a href="/docs/selecting-data-feeds/#ðŸŸ¡-monitored-feeds" alt="Monitored" target="_blank">ðŸŸ¡</a></span>',
        "custom": '<span class="hovertext feed-category" data-hover="Custom"><a href="/docs/selecting-data-feeds/#-custom-feeds" alt="Custom" target="_blank">ðŸ”µ</a></span>',
        "specialized": '<span class="hovertext feed-category" data-hover="Specialized"><a href="/docs/selecting-data-feeds/#-specialized-feeds" alt="Specialized" target="_blank">âš«</a></span>'
    }
    render = (data) => {
        let html = '';
        if(data["{{stub}}"]) {
            for(let network of data["{{stub}}"].networks) {
                html += `<h2 id="${network.name}">${network.name} <a class="anchor" href="#${network.name}"><img src="/images/link.svg" alt="Link to this section"></a></h2>`;
                html += `<label><input type="checkbox" class="extra" ${showExtraDetails ? 'checked="checked"' : ''}>Show more details</input></label>`;
                let proxyList = '';
                if(network.networkType == "mainnet") {
                    for(let proxy of network.proxies) {
                        proxyList += `
                        <tr id="${network.name} ${proxy.pair}">
                            <td><div class="proxy-pair-column">${feedCategories[proxy.feedCategory] || ''}<code class="proxy-pair">${proxy.pair}</code></div></td>
                            <td><code>${proxy.assetName}</code></td>
                            <td><code>${proxy.feedType}</code></td>
                            <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.deviationThreshold ? (proxy.deviationThreshold + '%') : 'N/A'}</td>
                            <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.heartbeat ? proxy.heartbeat : 'N/A'}</td>
                            <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.decimals ? proxy.decimals : 'N/A'}</td>
                            <td><a href="${network.url.replace('%s',proxy.proxy)}"><code>${proxy.proxy}</code></a></td>
                        </tr>`;
                    }
                    html += `
                    <table>
                        <thead>
                            <tr>
                                <th>Pair</th>
                                <th>Asset</th>
                                <th>Type</th>
                                <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Deviation</th>
                                <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Heartbeat</th>
                                <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Dec</th>
                                <th>${data["{{stub}}"].feedType}</th>
                            </tr>
                        </thead>
                        <tbody>${proxyList}</tbody>
                    </table>`;
                } else {
                    for(let proxy of network.proxies) {
                        proxyList += `
                        <tr id="${network.name} ${proxy.pair}">
                            <td class="proxy-column"><code>${proxy.pair}</code></td>
                            <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.deviationThreshold ? (proxy.deviationThreshold + '%') : 'N/A'}</td>
                            <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.heartbeat ? proxy.heartbeat : 'N/A'}</td>
                            <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.decimals ? proxy.decimals : 'N/A'}</td>
                            <td><a href="${network.url.replace('%s',proxy.proxy)}"><code>${proxy.proxy}</code></a></td>
                        </tr>`;
                    }
                    html += `
                    <table>
                        <thead>
                            <tr>
                                <th>Pair</th>
                                <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Deviation</th>
                                <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Heartbeat</th>
                                <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Dec</th>
                                <th>${data["{{stub}}"].feedType}</th>
                            </tr>
                        </thead>
                        <tbody>${proxyList}</tbody>
                    </table>`;
                }
            }
        } else {
            html = `<em style="color:red;">Couldn't render the feed list, it may still be processing. Feeds are updated about every half hour..</em>`;
        }
        dest.innerHTML = html;
        dest.querySelectorAll('.extra').forEach((item) => item.addEventListener('change', () => {
            showExtraDetails = event.target.checked;
            render(data);
            })
        );
    }
    // If you are developing locally, use a local version of this file,
    // Otherwise pull from the cron-generated web version
    let path = 'https://cl-docs-addresses.web.app/addresses.json';
    if(window.location.host === 'localhost:4200') {
        path = '/addresses/addresses.json';
    }
    fetch(path)
    .then(response => response.json())
    .then(json => {
        render(json);
    });
</script>

<rdme-callout theme="warn">
    <p><small>Please be careful with the feeds used by your smart contracts. The feeds listed in our official documentation have been reviewed; feeds built for custom deployments by other community members might have additional risks. Please do close diligence on your feeds before implementing them in your contracts. <a href="/docs/selecting-data-feeds/">Learn more about making responsible data quality decisions.</a></small>
    </p>
</rdme-callout>
