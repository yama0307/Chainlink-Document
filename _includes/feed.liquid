---
layout: ./nodes.liquid
section: smartContract
---

{% case metadata.ecosystem %}
  {% when "terra" %}
     <p>To learn how to implement these feeds, see the <a href="/docs/terra/using-data-feeds-terra/">Terra Examples for Consuming Data Feeds</a>.</p>
     <p>To obtain tokens on the Terra Bombay Testnet, see the <a href="https://faucet.terra.money/">Terra Testnet Faucet</a>. For these feeds, use the <strong>Bombay-12</strong> testnet.</p>
  {% when "solana" %}
     <p>To learn how to implement these feeds, see the <a href="/docs/solana/using-data-feeds-solana/">Solana Examples for Consuming Data Feeds</a>.</p>
     <p>To learn how to obtain SOL tokens on the Solana Devnet, see the <a href="https://docs.solana.com/cli/transfer-tokens#airdrop-some-tokens-to-get-started">Solana Documentation</a>.</p>
  {% else %}
     <p>To learn how to implement these feeds, see the <a href="/docs/get-the-latest-price/">Ethereum Examples for Consuming Data Feeds</a>.</p>
     <p>For LINK token and Faucet details, see the <a href="/docs/link-token-contracts/">LINK Token Contracts</a> page.</p>
{% endcase %}

<p>Note, off-chain equity and ETF assets are only traded during standard market hours (9:30 am - 4 pm ET M-F). Using these feeds outside of those windows is not recommended.</p>

<style>
    table {
        border-collapse: collapse;
        width:100%;
    }
    th, td {
        border: 1px solid #dfe2e5;
        padding: 6px 13px;
    }
    thead tr {
        background-color: #f6f8fa;
    }
    tr:nth-child(2n) {
        background-color: rgb(251, 252, 253);
    }
    .detail-hidden {
        display: none;
    }
    input {
        margin-right:8px;
    }
</style>

{% case metadata.l2healthflag %}
  {% when "arbitrum" %}
     <rdme-callout theme="warn">
         <p>It`s recommended to use <a href="/docs/l2-sequencer-flag/">L2 Sequencer Health Flag</a>
         for all of the contracts on Arbitrum network!
         </p>
     </rdme-callout>
  {% when "optimism" %}
     <rdme-callout theme="warn">
         <p>Optimism uses an optimistic rollup protocol, but there is no L2 Sequencer Health Flag available at this time.</p>
     </rdme-callout>
{% endcase %}

<div id="feed-data">
    Loading feeds...
</div>

<script>
    dest = document.getElementById('feed-data');
    let showExtraDetails = false;
    render = (data) => {
        let html = '';
        if(data["{{stub}}"]) {
            for(let network of data["{{stub}}"].networks) {
                html += `<h2 id="${network.name}">${network.name} <a class="anchor" href="#${network.name}"><img src="/images/link.svg" alt="Link to this section"></a></h2>`;
                html += `<label><input type="checkbox" class="extra" ${showExtraDetails ? 'checked="checked"' : ''}>Show Heartbeat and Deviation Details</input></label>`;
                let proxyList = '';
                for(let proxy of network.proxies) {
                    proxyList += `
                    <tr id="${network.name} ${proxy.pair}">
                        <td><code>${proxy.pair}</code></td>
                        <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.deviationThreshold ? (proxy.deviationThreshold + '%') : 'N/A'}</td>
                        <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.heartbeat ? proxy.heartbeat : 'N/A'}</td>
                        <td>${proxy.decimals}</td>
                        <td><a href="${network.url.replace('%s',proxy.proxy)}"><code>${proxy.proxy}</code></a></td>
                    </tr>`;
                }
                html += `
                <table>
                    <thead>
                        <tr>
                            <th>Pair</th>
                            <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Deviation</th>
                            <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Heartbeat</th>
                            <th>Dec</th>
                            <th>Proxy</th>
                        </tr>
                    </thead>
                    <tbody>${proxyList}</tbody>
                </table>`;
            }
        } else {
            html = `<em style="color:red;">Couldn't render the feed list, it may still be processing. Feeds are updated about every half hour..</em>`;
        }
        dest.innerHTML = html;
        dest.querySelectorAll('.extra').forEach((item) => item.addEventListener('change', () => {
            showExtraDetails = event.target.checked;
            render(data);
            })
        );
    }
    // If you are developing locally, use a local version of this file,
    // Otherwise pull from the cron-generated web version
    let path = 'https://cl-docs-addresses.web.app/addresses.json';
    if(window.location.host === 'localhost:4200') {
        path = '/addresses/addresses.json';
    }
    fetch(path)
    .then(response => response.json())
    .then(json => {
        render(json);
    });
</script>
