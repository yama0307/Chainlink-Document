---
layout: ./main.liquid
---

<div class="nav-content">
  <button class="nomenu" onclick="document.getElementsByTagName('navigation')[0].classList.add('open')">
    Select a Section
    <svg style="width: 24px; height: 24px" viewBox="0 0 24 24">
      <path fill="currentColor" d="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" />
    </svg>
  </button>
  <navigation>
    <button class="menu" onclick="document.getElementsByTagName('navigation')[0].classList.remove('open')">
      <svg style="width: 24px; height: 24px" viewBox="0 0 24 24">
        <path fill="currentColor" d="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" />
      </svg>
    </button>
    {% for group in section %}
    <div>
      <span class="nav-header">{{ group.title }}</span>
      {% for destination in group.contents %}
      <a href="{{ destination.url }}" title="{{ destination.title }}">{{ destination.title }}</a>
      {% for chapter in destination.chapters %}
      <a href="{{ chapter.url }}" style="padding-left: 32px">{{ chapter.title }}</a>
      {% endfor %} {% endfor %}
    </div>
    {% endfor %}
  </navigation>
  <div class="article">
    <!--{% include banner %}-->
    {% if title %}
    <div class="title">
      <h1 class="page-title">{{ title }}</h1>
      <div class="corner-floated">
        <div id="docsat"></div>
        <script src="/docsat.js"></script>
        <a href="https://github.com/smartcontractkit/documentation/edit/main/{{ page.inputPath }}">Suggest Edits</a>
        <!--   Last Modified: {{page.date}} -->
      </div>
    </div>
    <hr style="border: 0; border-top: 1px solid #eee" />
    {% endif %}

    {{ content }}
    {% if whatsnext %}
    <div class="nextSteps">
      <hr />
      <h2>What's Next</h2>
      <table>
        <tbody>
          {% for page in whatsnext %}
          <tr>
            <td>
              <a href="{{ page[1] }}">â€º {{ page[0] }}</a>
            </td>
          </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
    {% endif %}
  </div>
</div>
<script>
  let _hsq = (window._hsq = window._hsq || []);
  window.onscroll = () => {
    let current = '';
    let h2Tags = document.getElementsByTagName('h2');
    for (let i = 0; i < h2Tags.length; i++) {
      const sectionTop = h2Tags[i].offsetTop;
      if (scrollY >= sectionTop) {
        current = h2Tags[i].getAttribute('id');
      }
    }

    let h3Tags = document.getElementsByTagName('h3');
    for (let i = 0; i < h3Tags.length; i++) {
      const sectionTop = h3Tags[i].offsetTop;
      if (Math.ceil(scrollY) >= sectionTop) {
        current = h3Tags[i].getAttribute('id');
      }
    }

    // get links
    let aTags = document.getElementsByTagName('a');
    for (let i = 0; i < aTags.length; i++) {
      aTags[i].classList.remove('active');
      let href = aTags[i].getAttribute('href');
      if (href === '#' + current) {
        aTags[i].classList.add('active');
      }
    }
  };
</script>
